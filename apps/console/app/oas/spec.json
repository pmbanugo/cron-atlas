{
  "openapi": "3.1.0",
  "info": {
    "title": "Cron Atlas API",
    "description": "TODO: add description",
    "contact": {
      "email": "peter@flycd.dev"
    },
    "license": {
      "name": "AGPL 3.0",
      "url": "https://github.com/pmbanugo/cron-atlas?tab=AGPL-3.0-1-ov-file#readme"
    },
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://cronatlas.dev/api"
    }
  ],
  "tags": [
    {
      "name": "job",
      "description": "Everything about your Jobs",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://cronatlas.dev"
      }
    },
    {
      "name": "scheduled-function",
      "description": "Operations to manage scheduled function"
    }
  ],
  "paths": {
    "/job": {
      "post": {
        "tags": ["job"],
        "summary": "Create a new job",
        "description": "Create a new job. The type of job is always a scheduled function.",
        "operationId": "createJob",
        "requestBody": {
          "description": "Payload to create a new job. The jobType field determines the type of Job and required fields.",
          "$ref": "#/components/requestBodies/NewJobInput"
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "examples": ["invalid function file"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "tags": ["job"],
        "summary": "List jobs",
        "description": "Get the list of jobs in the system",
        "operationId": "getJobs",
        "responses": {
          "200": {
            "description": "Returns the list of jobs with a subset of the Job properties",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "jobType": {
                            "$ref": "#/components/schemas/JobType"
                          },
                          "schedule": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "$ref": "#/components/schemas/ScheduleType"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/jobs/{id}": {
      "put": {
        "tags": ["job"],
        "summary": "Update job's schedule, name, and url (if it's a url-based job)",
        "description": "Updates a job's schedule, name, and url (if it's a url-based job).",
        "operationId": "updateJobById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of job to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Payload to update a job job. The jobType field determines the type of the required fields.",
          "$ref": "#/components/requestBodies/UpdateJobInput"
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "examples": ["invalid function file"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      },
      "get": {
        "tags": ["job"],
        "summary": "Get the details of a Job",
        "description": "Get the details of a Job",
        "operationId": "getJobById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of job to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the job details",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/Job" },
                    {
                      "type": "object",
                      "required": ["paused"],
                      "properties": {
                        "paused": {
                          "type": "boolean"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Job not found"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags": ["job"],
        "summary": "Deletes a Job",
        "description": "Deletes a Job by Id",
        "operationId": "deleteJobById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the job to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Job deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/jobs/{id}/function-file": {
      "post": {
        "tags": ["job", "scheduled-function"],
        "summary": "Update the scheduled function file",
        "description": "Update the scheduled function file",
        "operationId": "updateScheduledFunctionFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of scheduled function to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "runtime": {
                    "$ref": "#/components/schemas/FunctionRuntime"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["runtime", "file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "examples": ["invalid function file"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/jobs/{id}/secrets": {
      "post": {
        "tags": ["job", "scheduled-function"],
        "summary": "Update (or add) secrets for a scheduled function",
        "description": "Update (or add) secrets for a scheduled function",
        "operationId": "updateScheduledFunctionSecrets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of scheduled function to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Secret"
                },
                "minItems": 1,
                "uniqueItems": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "the keys of the saved secrets",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "examples": ["invalid key/value pair"]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "tags": ["job", "scheduled-function"],
        "summary": "Delete secrets for a scheduled function",
        "description": "Delete secrets for a scheduled function",
        "operationId": "deleteScheduledFunctionSecrets",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of scheduled function to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "minItems": 1,
                "uniqueItems": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "401": {
            "description": "Unauthorized"
          },
          "5XX": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FunctionRuntime": {
        "type": "string",
        "enum": ["nodejs-alpine", "nodejs-debian", "bun-alpine", "bun-debian"]
      },
      "JobType": {
        "type": "string",
        "enum": ["url", "function"]
      },
      "ScheduleType": {
        "type": "string",
        "enum": ["interval", "cron", "once"]
      },
      "BaseJob": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "jobType": {
            "$ref": "#/components/schemas/JobType"
          },
          "schedule": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/components/schemas/ScheduleType"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "required": ["id", "name", "runtime", "jobType", "schedule"]
      },
      "ScheduledFunctionJob": {
        "allOf": [
          { "$ref": "#/components/schemas/BaseJob" },
          {
            "type": "object",
            "properties": {
              "runtime": {
                "$ref": "#/components/schemas/FunctionRuntime"
              },
              "secrets": {
                "type": "array",
                "description": "contains the secret keys without the value",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": ["runtime"]
          }
        ]
      },
      "UrlBasedJob": {
        "allOf": [
          { "$ref": "#/components/schemas/BaseJob" },
          {
            "type": "object",
            "properties": {
              "endpoint": {
                "type": "object",
                "description": "contains the url and related properties",
                "properties": {
                  "url": { "type": "string", "format": "uri" }
                },
                "required": ["url"]
              }
            },
            "required": ["endpoint"]
          }
        ]
      },
      "Job": {
        "oneOf": [
          { "$ref": "#/components/schemas/ScheduledFunctionJob" },
          { "$ref": "#/components/schemas/UrlBasedJob" }
        ],
        "discriminator": {
          "propertyName": "jobType",
          "mapping": {
            "function": "#/components/schemas/ScheduledFunctionJob",
            "url": "#/components/schemas/UrlBasedJob"
          }
        }
      },
      "Secret": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "required": ["key", "value"]
      },
      "BaseJobInput": {
        "description": "The base object that describes the core fields for a cron job",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "examples": ["HackerNews weekly"]
          },
          "jobType": {
            "$ref": "#/components/schemas/JobType"
          },
          "scheduleType": {
            "$ref": "#/components/schemas/ScheduleType"
          },
          "schedule": {
            "description": "see the [schedule specification](https://github.com/pmbanugo/cron-atlas/blob/main/Documentation.md#schedule-specification) for allowed values.",
            "type": "string"
          }
        },
        "required": ["name", "jobType", "scheduleType", "schedule"]
      },
      "ScheduledFunctionInput": {
        "summary": "Scheduled function request payload",
        "description": "Payload to create a new scheduled function job.",
        "allOf": [
          { "$ref": "#/components/schemas/BaseJobInput" },
          {
            "type": "object",
            "properties": {
              "runtime": {
                "$ref": "#/components/schemas/FunctionRuntime"
              },
              "file": {
                "type": "string",
                "format": "binary"
              },
              "secrets": {
                "type": "array",
                "description": "secrets which will be provided to the function at runtime.",
                "items": {
                  "$ref": "#/components/schemas/Secret"
                },
                "minItems": 1,
                "uniqueItems": true
              }
            },
            "required": ["runtime", "file"]
          }
        ]
      },
      "UrlBasedJobInput": {
        "summary": "Scheduled function request payload",
        "description": "Payload to create a new job that calls an external API (external to Cron Atlas).",
        "allOf": [
          { "$ref": "#/components/schemas/BaseJobInput" },
          {
            "type": "object",
            "required": ["url"],
            "properties": {
              "url": {
                "type": "string",
                "format": "uri",
                "example": "https://api.example.com/cron/job",
                "examples": ["https://api.example.com/cron/job"]
              }
            }
          }
        ]
      }
    },
    "requestBodies": {
      "NewJobInput": {
        "content": {
          "multipart/form-data": {
            "schema": {
              "oneOf": [
                { "$ref": "#/components/schemas/ScheduledFunctionInput" },
                { "$ref": "#/components/schemas/UrlBasedJobInput" }
              ],
              "discriminator": {
                "propertyName": "jobType",
                "mapping": {
                  "function": "#/components/schemas/ScheduledFunctionInput",
                  "url": "#/components/schemas/UrlBasedJobInput"
                }
              }
            }
          }
        }
      },
      "UpdateJobInput": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/BaseJobInput",
                  "description": "Update a scheduled function's scheduling details"
                },
                {
                  "$ref": "#/components/schemas/UrlBasedJobInput",
                  "description": "Update a url-based job"
                }
              ],
              "discriminator": {
                "propertyName": "jobType",
                "mapping": {
                  "function": "#/components/schemas/BaseJobInput",
                  "url": "#/components/schemas/UrlBasedJobInput"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [{ "bearerAuth": [] }]
}
